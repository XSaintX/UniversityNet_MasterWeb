// <auto-generated />
using System;
using MasterNet.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterNet.Persistence.Migrations
{
    [DbContext(typeof(MasterNetDbContext))]
    [Migration("20241009140759_MyDemoMigration")]
    partial class MyDemoMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MasterNet.Domain.Calificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alumno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Puntaje")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("calificaciones", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1ae45d9b-983e-4516-a80c-ae6f192cc9d9"),
                            Descripcion = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            FechaPublicacion = new DateTime(2024, 10, 9, 14, 7, 59, 231, DateTimeKind.Utc).AddTicks(5255),
                            Titulo = "Handcrafted Steel Bike"
                        },
                        new
                        {
                            Id = new Guid("5a85d4e0-9f43-45af-9574-f3a49bea3e6b"),
                            Descripcion = "The Football Is Good For Training And Recreational Purposes",
                            FechaPublicacion = new DateTime(2024, 10, 9, 14, 7, 59, 231, DateTimeKind.Utc).AddTicks(5297),
                            Titulo = "Unbranded Steel Hat"
                        },
                        new
                        {
                            Id = new Guid("caf24155-388f-4767-990d-e14d1120a7c7"),
                            Descripcion = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            FechaPublicacion = new DateTime(2024, 10, 9, 14, 7, 59, 231, DateTimeKind.Utc).AddTicks(5315),
                            Titulo = "Sleek Soft Computer"
                        },
                        new
                        {
                            Id = new Guid("daf2e454-3a8a-454c-bbf0-8742d1e96e33"),
                            Descripcion = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            FechaPublicacion = new DateTime(2024, 10, 9, 14, 7, 59, 231, DateTimeKind.Utc).AddTicks(5326),
                            Titulo = "Incredible Fresh Car"
                        },
                        new
                        {
                            Id = new Guid("c6ea28f4-086c-4a22-bed7-60a0a101d917"),
                            Descripcion = "The Football Is Good For Training And Recreational Purposes",
                            FechaPublicacion = new DateTime(2024, 10, 9, 14, 7, 59, 231, DateTimeKind.Utc).AddTicks(5344),
                            Titulo = "Licensed Steel Keyboard"
                        },
                        new
                        {
                            Id = new Guid("7a63c6cd-c05b-47f4-98c0-bcc5a0241aa7"),
                            Descripcion = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            FechaPublicacion = new DateTime(2024, 10, 9, 14, 7, 59, 231, DateTimeKind.Utc).AddTicks(5357),
                            Titulo = "Rustic Steel Chicken"
                        },
                        new
                        {
                            Id = new Guid("0fbe5196-858c-41d9-ba84-525f7026a38b"),
                            Descripcion = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            FechaPublicacion = new DateTime(2024, 10, 9, 14, 7, 59, 231, DateTimeKind.Utc).AddTicks(5370),
                            Titulo = "Refined Plastic Salad"
                        },
                        new
                        {
                            Id = new Guid("f4418871-f1d9-4f7b-b849-0612f7c7c06f"),
                            Descripcion = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            FechaPublicacion = new DateTime(2024, 10, 9, 14, 7, 59, 231, DateTimeKind.Utc).AddTicks(5380),
                            Titulo = "Handmade Rubber Shoes"
                        },
                        new
                        {
                            Id = new Guid("306dda49-ed91-431b-9912-293f6d69ad61"),
                            Descripcion = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            FechaPublicacion = new DateTime(2024, 10, 9, 14, 7, 59, 231, DateTimeKind.Utc).AddTicks(5389),
                            Titulo = "Practical Soft Soap"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstructor", b =>
                {
                    b.Property<Guid?>("InstructorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InstructorId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_instructores", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPrecio", b =>
                {
                    b.Property<Guid?>("PrecioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PrecioId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_precios", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("instructores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7aa3784-1174-4a78-b276-8ba294eaa672"),
                            Apellidos = "Wolf",
                            Grado = "Corporate Division Specialist",
                            Nombre = "Parker"
                        },
                        new
                        {
                            Id = new Guid("74ea0a22-32f9-44df-9ef5-24c12f45f222"),
                            Apellidos = "Mayert",
                            Grado = "Internal Branding Orchestrator",
                            Nombre = "Roslyn"
                        },
                        new
                        {
                            Id = new Guid("3cac74c6-05de-4db6-9a43-73efc77078ba"),
                            Apellidos = "Nicolas",
                            Grado = "International Mobility Planner",
                            Nombre = "Fern"
                        },
                        new
                        {
                            Id = new Guid("904f06ce-c7d6-4f4d-9993-798ba74be36f"),
                            Apellidos = "Stiedemann",
                            Grado = "Investor Operations Producer",
                            Nombre = "Jonathan"
                        },
                        new
                        {
                            Id = new Guid("d2a93d0d-074e-44e4-94c0-51fe7599302f"),
                            Apellidos = "Cassin",
                            Grado = "Future Interactions Assistant",
                            Nombre = "Ferne"
                        },
                        new
                        {
                            Id = new Guid("f7e733f2-8818-4fe8-9b55-ff4f2262bc97"),
                            Apellidos = "Koch",
                            Grado = "Regional Applications Developer",
                            Nombre = "Marcelle"
                        },
                        new
                        {
                            Id = new Guid("aad9cc2f-3bfa-423a-8c57-f6fd41f57b12"),
                            Apellidos = "Heidenreich",
                            Grado = "Human Functionality Representative",
                            Nombre = "Layne"
                        },
                        new
                        {
                            Id = new Guid("de241b60-f688-4595-a9be-f4c8426e2d5a"),
                            Apellidos = "Predovic",
                            Grado = "Direct Research Strategist",
                            Nombre = "Eric"
                        },
                        new
                        {
                            Id = new Guid("9906fec2-bdb3-4613-a7ec-15b59bb459b4"),
                            Apellidos = "Lakin",
                            Grado = "Regional Usability Developer",
                            Nombre = "Broderick"
                        },
                        new
                        {
                            Id = new Guid("a31521d6-99d1-4601-a621-fd4cf5222c78"),
                            Apellidos = "Lueilwitz",
                            Grado = "Human Program Architect",
                            Nombre = "Marjory"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CursoId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("imagenes", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Precio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("PrecioActual")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PrecioPromocion")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("precios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ca4b411-3acc-4c95-b628-d12f052c7d78"),
                            Nombre = "Precio Regular",
                            PrecioActual = 10.0m,
                            PrecioPromocion = 8.0m
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Calificacion", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Calificaciones")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstructor", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Instructor", "Instructor")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPrecio", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Precio", "Precio")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("PrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Photos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("CursoInstructores");

                    b.Navigation("CursoPrecios");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Navigation("CursoInstructores");
                });

            modelBuilder.Entity("MasterNet.Domain.Precio", b =>
                {
                    b.Navigation("CursoPrecios");
                });
#pragma warning restore 612, 618
        }
    }
}
